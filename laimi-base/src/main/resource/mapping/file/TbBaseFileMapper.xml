<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.laimilife.frame.file.dao.TbBaseFileMapper">
  <resultMap id="BaseResultMap" type="com.laimilife.frame.file.model.TbBaseFile">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="origin_name" jdbcType="VARCHAR" property="originName" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_id" jdbcType="CHAR" property="createId" />
    <result column="create_name" jdbcType="VARCHAR" property="createName" />
  </resultMap>
  <sql id="Base_Column_List">
    id, origin_name, path, url, create_time, create_id, create_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_base_file
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_base_file
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.laimilife.frame.file.model.TbBaseFile">
    insert into tb_base_file (id, origin_name, path, 
      url, create_time, create_id, 
      create_name)
    values (#{id,jdbcType=CHAR}, #{originName,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=CHAR}, 
      #{createName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.laimilife.frame.file.model.TbBaseFile">
    insert into tb_base_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="originName != null">
        origin_name,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createName != null">
        create_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="originName != null">
        #{originName,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=CHAR},
      </if>
      <if test="createName != null">
        #{createName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.laimilife.frame.file.model.TbBaseFile">
    update tb_base_file
    <set>
      <if test="originName != null">
        origin_name = #{originName,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=CHAR},
      </if>
      <if test="createName != null">
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.laimilife.frame.file.model.TbBaseFile">
    update tb_base_file
    set origin_name = #{originName,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=CHAR},
      create_name = #{createName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>